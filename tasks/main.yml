---
- name: resolve platform specific vars
  include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      skip: true
      paths:
        - '{{ role_path }}/vars'
- name: install dep os pkgs...
  become: yes
  become_user: root
  package:
    name: '{{ haskell_stack_dep_pkgs|default([]) }}'
    state: present
- name: check for installation in  {{ haskell_stack_install_dir }}...
  become: yes
  stat:
    path: '{{ haskell_stack_install_dir }}'
  changed_when: false
  register: haskell_stack_binary
- when: not haskell_stack_binary.stat.exists
  block:
    - name: downloading {{ haskell_stack_tgz_url }} to {{ haskell_stack_tmp_tgz }}
      become: yes
      become_user: root
      get_url:
        url: '{{ haskell_stack_tgz_url }}'
        dest: '{{ haskell_stack_tmp_tgz }}'
        checksum: '{{ haskell_stack_checksum }}'
    - name: unarchiving {{ haskell_stack_tmp_tgz }} to {{ haskell_stack_parent_install_dir }}
      become: yes
      become_user: root
      unarchive:
        src: '{{ haskell_stack_tmp_tgz }}'
        dest: '{{ haskell_stack_parent_install_dir }}'
        creates: '{{ haskell_stack_install_dir }}'
  always:
    - name: rm {{ haskell_stack_tmp_tgz }}
      become: yes
      become_user: root
      file:
        path: '{{ haskell_stack_tmp_tgz }}'
        state: absent

- name: linking {{ haskell_stack_link_exe }} to {{ haskell_stack_install_exe }}
  become: yes
  become_user: root
  file:
    src: '{{ haskell_stack_install_exe }}'
    dest: '{{ haskell_stack_link_exe }}'
    state: link
